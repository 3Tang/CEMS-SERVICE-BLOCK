package com.vrv.cems.service.block.impl;

import java.nio.ByteBuffer;

import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import org.apache.thrift.TException;

import com.sys.common.util.compress.CompressFormat;
import com.sys.common.util.compress.Compressor;
import com.vrv.cems.service.base.interfaces.CommonService;
import com.vrv.cems.service.block.ServiceMain;
import com.vrv.cems.service.block.business.BusinessProcess;
import com.vrv.cems.service.block.factory.BusinessProcessFactory;
import com.vrv.cems.service.block.utils.CommonUtil;

/**
 * <B>说 明</B>:
 * 
 * @author 作 者 名：dongyifei<br/>
 *         E-mail ：dongyifei@vrvmail.com.cn
 * 
 * @version 版 本 号：V1.0.<br/>
 *          创建时间：2014年8月15日 下午7:28:51
 */
public class BlockServiceImpl implements CommonService.Iface {
	private static Log logger = LogFactory.getLog(BlockServiceImpl.class);
	@Override
	public ByteBuffer getDataTS(String maxCode, String minCode,
			String checkCode, boolean isZip, ByteBuffer data,
			boolean isEncrypt, String key, int flag) throws TException {
		
		BusinessProcess businessProcess = BusinessProcessFactory
				.create(minCode);
		//校验返回,调试阶段未使用
		String dataStr= CommonUtil.tsParams2String(checkCode,isZip,data,isEncrypt,key,flag);
		//String dataStr= CommonUtil.byteBufferToString(data);
		
	return businessProcess.process(maxCode, minCode, checkCode, isZip,
				dataStr);
	}

	@Override
	public ByteBuffer getDataTC(String maxCode, String minCode,
			String checkCode, boolean isZip, ByteBuffer data, String sessionId,
			int msgCode) throws TException {
		BusinessProcess businessProcess = BusinessProcessFactory
				.create(minCode);
		
		//校验返回,调试阶段未使用
		//String dataStr= CommonUtil.tcParams2String(checkCode,isZip,data,sessionId,msgCode);
		String dataStr= CommonUtil.byteBufferToString(data);
		
		return businessProcess.process(maxCode, minCode, checkCode, isZip,
				dataStr);
		
	}
}
